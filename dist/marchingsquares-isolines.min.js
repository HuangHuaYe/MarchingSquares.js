/*!
* MarchingSquaresJS
* version 1.2.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2018 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports):"function"==typeof define&&define.amd?define(["exports"],o):o(e.MarchingSquaresJS=e.MarchingSquaresJS||{})}(this,function(e){"use strict";function p(e,o,t){return e<o?(t-e)/(o-e):(e-t)/(e-o)}function u(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.quadTree=!1}function I(e,o,t,n){var l=[];return e.polygons.forEach(function(e){e.forEach(function(e){e[0]+=o,e[1]+=t}),n.linearRing&&e.push(e[0]),l.push(e)}),l}function a(e,o,t,n,l){var s=n,r=l,i=0,h=0;if(this.x=o,this.y=t,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,1===n&&1===l)this.lowerBound=Math.min(e[t][o],e[t][o+1],e[t+1][o+1],e[t+1][o]),this.upperBound=Math.max(e[t][o],e[t][o+1],e[t+1][o+1],e[t+1][o]);else{if(1<n){for(;0!==s;)s>>=1,i++;n===1<<i-1&&i--,s=1<<i-1}if(1<l){for(;0!==r;)r>>=1,h++;l===1<<h-1&&h--,r=1<<h-1}this.childA=new a(e,o,t,s,r),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,0<n-s&&(this.childB=new a(e,o+s,t,n-s,r),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),0<l-r&&(this.childC=new a(e,o+s,t+r,n-s,l-r),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),0<l-r&&(this.childD=new a(e,o,t+r,s,l-r),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}function d(e){if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data must be scalar field, i.e. array of arrays");this.data=e,this.root=new a(e,0,0,e[0].length-1,e.length-1)}function o(e,o,t){var n,l,s,r=!1,i=null,h=null,a=null,j=null,J=null,R=[];if(!e)throw new Error("data is required");if(null==o)throw new Error("threshold is required");if(t&&"object"!=typeof t)throw new Error("options must be an object");if(n=function(e){var o,t,n,l,s;for(l=new u,e=e||{},s=Object.keys(l),o=0;o<s.length;o++)null!=(n=e[t=s[o]])&&(l[t]=n);return l.polygons_full=!l.polygons,l.interpolate=p,l}(t),e instanceof d)h=(i=e).root,a=e.data;else{if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("input is neither array of arrays nor object retrieved from 'quadTree()'");a=e}if(Array.isArray(o)){for(r=!0,l=0;l<o.length;l++)if(isNaN(+o[l]))throw new Error("threshold["+l+"] is not a number")}else{if(isNaN(+o))throw new Error("threshold must be a number or array of numbers");o=[o]}return n.quadTree&&!h&&(i=new d(a),h=i.root,a=i.data),n.verbose&&(n.polygons?console.log("MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell"):console.log("MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid"),r&&console.log("MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold")),o.forEach(function(e,o){if(J=[],n.threshold=e,n.verbose&&console.log("MarchingSquaresJS-isoLines: computing iso lines for threshold "+e),n.polygons)if(n.quadTree)h.cellsBelowThreshold(n.threshold,!0).forEach(function(e){J=J.concat(I(L(a,e.x,e.y,n),e.x,e.y,n))});else for(s=0;s<a.length-1;++s)for(o=0;o<a[0].length-1;++o)J=J.concat(I(L(a,o,s,n),o,s,n));else{if(j=[],n.quadTree)h.cellsBelowThreshold(n.threshold,!!n.linearRing).forEach(function(e){void 0===j[e.x]&&(j[e.x]=[]),j[e.x][e.y]=L(a,e.x,e.y,n)});else for(o=0;o<a[0].length-1;++o)for(j[o]=[],s=0;s<a.length-1;++s)j[o][s]=L(a,o,s,n);p=j,u=n,q=[],M=(t=a).length-1,C=t[0].length-1,T=["right","bottom","left","top"],N=[0,-1,0,1],S=[-1,0,1,0],D={bottom:1,left:2,top:3,right:0},function(e,o){var t,n,l,s,r;for(t=!0,n=e[0].length,l=e.length,r=0;r<l;r++)if(e[r][0]>=o||e[r][n-1]>=o){t=!1;break}if(t&&(e[l-1][0]>=o||e[l-1][n-1]>=o)&&(t=!1),t)for(s=0;s<n-1;s++)if(e[0][s]>=o||e[l-1][s]>o){t=!1;break}return t}(t,u.minV,u.maxV)&&(u.linearRing?q.push([[0,0],[0,M],[C,M],[C,0],[0,0]]):q.push([[0,0],[0,M],[C,M],[C,0]])),p.forEach(function(e,a){e.forEach(function(e,o){for(d=null,c=0;c<4;c++)if(d=T[c],"object"==typeof e.edges[d]){for(y=[],g=e.edges[d],m=d,B=o,w=!1,v=[(b=a)+g.path[0][0],o+g.path[0][1]],y.push(v);!w&&"object"==typeof(f=p[b][B]).edges[m];)if(g=f.edges[m],delete f.edges[m],(x=g.path[1])[0]+=b,x[1]+=B,y.push(x),m=g.move.enter,b+=g.move.x,B+=g.move.y,void 0===p[b]||void 0===p[b][B]){if(!u.linearRing)break;if(A=k=0,b===C?(b--,k=0):b<0?(b++,k=2):B===M?(B--,k=3):B<0&&(B++,k=1),b===a&&B===o&&k===D[d]){w=!0,m=d;break}for(;;){if(_=!1,4<A)throw new Error("Direction change counter overflow! This should never happen!");if(f=p[b][B],E=T[k],"object"==typeof f.edges[E]){g=f.edges[E],y.push((s=b,r=B,i=k,h=g.path,0===i?(s+=1,r+=h[0][1]):1===i?s+=h[0][0]:2===i?r+=h[0][1]:3===i&&(s+=h[0][0],r+=1),[s,r])),m=E,_=!0;break}if(_)break;if(y.push((t=b,n=B,0===(l=k)?t++:1===l||(2===l?n++:3===l&&(t++,n++)),[t,n])),B+=S[k],void 0!==p[b+=N[k]]&&void 0!==p[b][B]||(b-=N[k],B-=S[k],k=(k+1)%4,A++),b===a&&B===o&&k===D[d]){w=!0,m=d;break}}}!u.linearRing||y[y.length-1][0]===v[0]&&y[y.length-1][1]===v[1]||y.push(v),q.push(y)}var t,n,l,s,r,i,h})}),J=q}var t,p,u,d,c,g,f,y,m,b,B,w,v,x,k,A,_,E,q,M,C,T,N,S,D;r?R.push(J):R=J}),"function"==typeof n.successCallback&&n.successCallback(R),R}function L(e,o,t,n){var l,s,r,i,h,a,p=0,u=e[t+1][o],d=e[t+1][o+1],c=e[t][o+1],g=e[t][o],f=n.threshold;if(!(isNaN(g)||isNaN(c)||isNaN(d)||isNaN(u))){switch(p|=f<=u?8:0,p|=f<=d?4:0,p|=f<=c?2:0,a={cval:p=+(p|=f<=g?1:0),polygons:[],edges:{},x0:g,x1:c,x2:d,x3:u},p){case 0:n.polygons&&a.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:l=n.interpolate(g,u,f),i=n.interpolate(g,c,f),n.polygons_full&&(a.edges.left={path:[[0,l],[i,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&a.polygons.push([[0,0],[0,l],[i,0]]);break;case 13:i=n.interpolate(g,c,f),s=n.interpolate(c,d,f),n.polygons_full&&(a.edges.bottom={path:[[i,0],[1,s]],move:{x:1,y:0,enter:"left"}}),n.polygons&&a.polygons.push([[i,0],[1,s],[1,0]]);break;case 11:s=n.interpolate(c,d,f),r=n.interpolate(u,d,f),n.polygons_full&&(a.edges.right={path:[[1,s],[r,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&a.polygons.push([[1,s],[r,1],[1,1]]);break;case 7:l=n.interpolate(g,u,f),r=n.interpolate(u,d,f),n.polygons_full&&(a.edges.top={path:[[r,1],[0,l]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&a.polygons.push([[r,1],[0,l],[0,1]]);break;case 1:l=n.interpolate(g,u,f),i=n.interpolate(g,c,f),n.polygons_full&&(a.edges.bottom={path:[[i,0],[0,l]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&a.polygons.push([[i,0],[0,l],[0,1],[1,1],[1,0]]);break;case 2:i=n.interpolate(g,c,f),s=n.interpolate(c,d,f),n.polygons_full&&(a.edges.right={path:[[1,s],[i,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&a.polygons.push([[0,0],[0,1],[1,1],[1,s],[i,0]]);break;case 4:s=n.interpolate(c,d,f),r=n.interpolate(u,d,f),n.polygons_full&&(a.edges.top={path:[[r,1],[1,s]],move:{x:1,y:0,enter:"left"}}),n.polygons&&a.polygons.push([[0,0],[0,1],[r,1],[1,s],[1,0]]);break;case 8:l=n.interpolate(g,u,f),r=n.interpolate(u,d,f),n.polygons_full&&(a.edges.left={path:[[0,l],[r,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&a.polygons.push([[0,0],[0,l],[r,1],[1,1],[1,0]]);break;case 12:l=n.interpolate(g,u,f),s=n.interpolate(c,d,f),n.polygons_full&&(a.edges.left={path:[[0,l],[1,s]],move:{x:1,y:0,enter:"left"}}),n.polygons&&a.polygons.push([[0,0],[0,l],[1,s],[1,0]]);break;case 9:i=n.interpolate(g,c,f),r=n.interpolate(u,d,f),n.polygons_full&&(a.edges.bottom={path:[[i,0],[r,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&a.polygons.push([[i,0],[r,1],[1,1],[1,0]]);break;case 3:l=n.interpolate(g,u,f),s=n.interpolate(c,d,f),n.polygons_full&&(a.edges.right={path:[[1,s],[0,l]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&a.polygons.push([[0,l],[0,1],[1,1],[1,s]]);break;case 6:i=n.interpolate(g,c,f),r=n.interpolate(u,d,f),n.polygons_full&&(a.edges.top={path:[[r,1],[i,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&a.polygons.push([[0,0],[0,1],[r,1],[i,0]]);break;case 10:l=n.interpolate(g,u,f),s=n.interpolate(c,d,f),i=n.interpolate(g,c,f),r=n.interpolate(u,d,f),h=(g+c+d+u)/4,n.polygons_full&&(h<f?(a.edges.left={path:[[0,l],[r,1]],move:{x:0,y:1,enter:"bottom"}},a.edges.right={path:[[1,s],[i,0]],move:{x:0,y:-1,enter:"top"}}):(a.edges.right={path:[[1,s],[r,1]],move:{x:0,y:1,enter:"bottom"}},a.edges.left={path:[[0,l],[i,0]],move:{x:0,y:-1,enter:"top"}})),n.polygons&&(h<f?a.polygons.push([[0,0],[0,l],[r,1],[1,1],[1,s],[i,0]]):(a.polygons.push([[0,0],[0,l],[i,0]]),a.polygons.push([[r,1],[1,1],[1,s]])));break;case 5:l=n.interpolate(g,u,f),s=n.interpolate(c,d,f),i=n.interpolate(g,c,f),r=n.interpolate(u,d,f),h=(g+c+d+u)/4,n.polygons_full&&(h<f?(a.edges.bottom={path:[[i,0],[0,l]],move:{x:-1,y:0,enter:"right"}},a.edges.top={path:[[r,1],[1,s]],move:{x:1,y:0,enter:"left"}}):(a.edges.top={path:[[r,1],[0,l]],move:{x:-1,y:0,enter:"right"}},a.edges.bottom={path:[[i,0],[1,s]],move:{x:1,y:0,enter:"left"}})),n.polygons&&(h<f?a.polygons.push([[0,l],[0,1],[r,1],[1,s],[1,0],[i,0]]):(a.polygons.push([[0,l],[0,1],[r,1]]),a.polygons.push([[i,0],[1,s],[1,0]])))}return a}}a.prototype.cellsInBand=function(e,o,t){var n=[];return t=void 0===t||t,this.lowerBound>o||this.upperBound<e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(n=n.concat(this.childA.cellsInBand(e,o,t))),this.childB&&(n=n.concat(this.childB.cellsInBand(e,o,t))),this.childC&&(n=n.concat(this.childC.cellsInBand(e,o,t))),this.childD&&(n=n.concat(this.childD.cellsInBand(e,o,t)))):(t||this.lowerBound<=e||this.upperBound>=o)&&n.push({x:this.x,y:this.y})),n},a.prototype.cellsBelowThreshold=function(e,o){var t=[];return o=void 0===o||o,this.lowerBound>e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(t=t.concat(this.childA.cellsBelowThreshold(e,o))),this.childB&&(t=t.concat(this.childB.cellsBelowThreshold(e,o))),this.childC&&(t=t.concat(this.childC.cellsBelowThreshold(e,o))),this.childD&&(t=t.concat(this.childD.cellsBelowThreshold(e,o)))):(o||this.upperBound>=e)&&t.push({x:this.x,y:this.y})),t},e.isoLines=o,e.isoContours=o,Object.defineProperty(e,"__esModule",{value:!0})});
