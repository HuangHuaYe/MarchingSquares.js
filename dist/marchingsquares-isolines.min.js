/*!
* MarchingSquaresJS
* version 1.2.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2018 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports):"function"==typeof define&&define.amd?define(["exports"],o):o(e.MarchingSquaresJS=e.MarchingSquaresJS||{})}(this,function(e){"use strict";var o={successCallback:null,verbose:!1,polygons:!1,polygons_full:!1,linearRing:!0},h=(Object.assign({interpolate:function(e,o,t,r){return r<t&&(r=t=r),e<o?e<t?(t-e)/(o-e):(r-e)/(o-e):r<e?(e-r)/(e-o):(e-t)/(e-o)},interpolate_a:function(e,o,t,r){return e<o?(t-e)/(o-e):(e-r)/(e-o)},interpolate_b:function(e,o,t,r){return e<o?(r-e)/(o-e):(e-t)/(e-o)}},o),Object.assign({interpolate:function(e,o,t){return e<o?(t-e)/(o-e):(e-t)/(e-o)}},o));function t(e,o,t){var r={};if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data should be an array of arrays");if(null==o)throw new Error("threshold is required");if(isNaN(+o))throw new Error("threshold must be a number");if(t&&"object"!=typeof t)throw new Error("options must be an object");t=t||{};for(var l=Object.keys(h),s=0;s<l.length;s++){var n=l[s],a=t[n];a=null!=a?a:h[n],r[n]=a}r.verbose&&console.log("MarchingSquaresJS-isoContours: computing isocontour for "+o),r.polygons_full=!r.polygons;var p,i={rows:e.length-1,cols:e[0].length-1,cells:[],threshold:o};r.threshold=o;for(var g=0;g<i.rows;++g){i.cells[g]=[];for(s=0;s<i.cols;++s)i.cells[g][s]=u(e,s,g,r)}return r.polygons?(r.verbose&&console.log("MarchingSquaresJS-isoContours: returning single polygons for each grid cell"),p=function(e,o){for(var t=e.rows,r=e.cols,l=[],s=0;s<t;s++)for(var n=0;n<r;n++)void 0!==e.cells[s][n]&&e.cells[s][n].polygons.forEach(function(e){e.forEach(function(e){e[0]+=n,e[1]+=s}),o.linearRing&&e.push(e[0]),l.push(e)});return l}(i,r)):(r.verbose&&console.log("MarchingSquaresJS-isoContours: returning iso lines (polygon paths) for entire data grid"),p=function(e,o){for(var t,r,l,s,n,a,p,i,g,h=e.rows,u=e.cols,c=[],f=["right","bottom","left","top"],y=[0,-1,0,1],d=[-1,0,1,0],v={bottom:1,left:2,top:3,right:0},b=!0,m=0;m<h;m++)if(e.cells[m][0].x0>=e.threshold||e.cells[m][u-1].x1>=e.threshold){b=!1;break}if(b&&(e.cells[h-1][0].x3>=e.threshold||e.cells[h-1][u-1].x2>=e.threshold)&&(b=!1),b)for(var x=0;x<u-1;x++)if(e.cells[0][x].x1>=e.threshold||e.cells[h-1][x].x2>e.threshold){b=!1;break}for(b&&(o.linearRing?c.push([[0,0],[0,h],[u,h],[u,0],[0,0]]):c.push([[0,0],[0,h],[u,h],[u,0]])),m=0;m<h;m++)for(x=0;x<u;x++)if(void 0!==e.cells[m][x]){var k=e.cells[m][x];if(15===k.cval)continue;for(var _=null,w=0;w<4;w++)if(_=f[w],"object"==typeof k.edges[_]){var j=[],N=_,S=x,q=m,C=!1,E=[x+(J=k.edges[_]).path[0][0],m+J.path[0][1]];for(j.push(E);!C;){var M=e.cells[q][S];if("object"!=typeof M.edges[N])break;var J=M.edges[N];delete M.edges[N];var R=J.path[1];if(R[0]+=S,R[1]+=q,j.push(R),N=J.move.enter,S+=J.move.x,q+=J.move.y,void 0===e.cells[q]||void 0===e.cells[q][S]){if(!o.linearRing)break;var A=0,O=0;if(S===u?(S--,A=0):S<0?(S++,A=2):q===h?(q--,A=3):q<0&&(q++,A=1),S===x&&q===m&&A===v[_]){C=!0,N=_;break}for(;;){var D=!1;if(4<O){console.log("Direction change counter overflow! This should never happen!");break}M=e.cells[q][S];var L=f[A];if("object"==typeof M.edges[L]){J=M.edges[L],j.push((s=S,n=q,a=A,p=J.path,g=i=void 0,i=s,g=n,0===a?(i+=1,g+=p[0][1]):1===a?i+=p[0][0]:2===a?g+=p[0][1]:3===a&&(i+=p[0][0],g+=1),[i,g])),N=L,D=!0;break}if(D)break;if(j.push((l=r=void 0,r=S,l=q,0===(t=A)?r++:1===t||(2===t?l++:3===t&&(r++,l++)),[r,l])),S+=y[A],q+=d[A],void 0!==e.cells[q]&&void 0!==e.cells[q][S]||(S-=y[A],q-=d[A],A=(A+1)%4,O++),S===x&&q===m&&A===v[_]){C=!0,N=_;break}}}}!o.linearRing||j[j.length-1][0]===E[0]&&j[j.length-1][1]===E[1]||j.push(E),c.push(j)}}return c}(i,r)),"function"==typeof r.successCallback&&r.successCallback(p),p}function u(e,o,t,r){var l=0,s=e[t+1][o],n=e[t+1][o+1],a=e[t][o+1],p=e[t][o],i=r.threshold;if(!(isNaN(p)||isNaN(a)||isNaN(n)||isNaN(s))){l|=i<=s?8:0,l|=i<=n?4:0,l|=i<=a?2:0;var g={cval:l=+(l|=i<=p?1:0),polygons:[],edges:{},x0:p,x1:a,x2:n,x3:s};switch(l){case 0:r.polygons&&g.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:var h=r.interpolate(p,s,i),u=r.interpolate(p,a,i);r.polygons_full&&(g.edges.left={path:[[0,h],[u,0]],move:{x:0,y:-1,enter:"top"}}),r.polygons&&g.polygons.push([[0,0],[0,h],[u,0]]);break;case 13:u=r.interpolate(p,a,i);var c=r.interpolate(a,n,i);r.polygons_full&&(g.edges.bottom={path:[[u,0],[1,c]],move:{x:1,y:0,enter:"left"}}),r.polygons&&g.polygons.push([[u,0],[1,c],[1,0]]);break;case 11:c=r.interpolate(a,n,i);var f=r.interpolate(s,n,i);r.polygons_full&&(g.edges.right={path:[[1,c],[f,1]],move:{x:0,y:1,enter:"bottom"}}),r.polygons&&g.polygons.push([[1,c],[f,1],[1,1]]);break;case 7:h=r.interpolate(p,s,i),f=r.interpolate(s,n,i);r.polygons_full&&(g.edges.top={path:[[f,1],[0,h]],move:{x:-1,y:0,enter:"right"}}),r.polygons&&g.polygons.push([[f,1],[0,h],[0,1]]);break;case 1:h=r.interpolate(p,s,i),u=r.interpolate(p,a,i);r.polygons_full&&(g.edges.bottom={path:[[u,0],[0,h]],move:{x:-1,y:0,enter:"right"}}),r.polygons&&g.polygons.push([[u,0],[0,h],[0,1],[1,1],[1,0]]);break;case 2:u=r.interpolate(p,a,i),c=r.interpolate(a,n,i);r.polygons_full&&(g.edges.right={path:[[1,c],[u,0]],move:{x:0,y:-1,enter:"top"}}),r.polygons&&g.polygons.push([[0,0],[0,1],[1,1],[1,c],[u,0]]);break;case 4:c=r.interpolate(a,n,i),f=r.interpolate(s,n,i);r.polygons_full&&(g.edges.top={path:[[f,1],[1,c]],move:{x:1,y:0,enter:"left"}}),r.polygons&&g.polygons.push([[0,0],[0,1],[f,1],[1,c],[1,0]]);break;case 8:h=r.interpolate(p,s,i),f=r.interpolate(s,n,i);r.polygons_full&&(g.edges.left={path:[[0,h],[f,1]],move:{x:0,y:1,enter:"bottom"}}),r.polygons&&g.polygons.push([[0,0],[0,h],[f,1],[1,1],[1,0]]);break;case 12:h=r.interpolate(p,s,i),c=r.interpolate(a,n,i);r.polygons_full&&(g.edges.left={path:[[0,h],[1,c]],move:{x:1,y:0,enter:"left"}}),r.polygons&&g.polygons.push([[0,0],[0,h],[1,c],[1,0]]);break;case 9:u=r.interpolate(p,a,i),f=r.interpolate(s,n,i);r.polygons_full&&(g.edges.bottom={path:[[u,0],[f,1]],move:{x:0,y:1,enter:"bottom"}}),r.polygons&&g.polygons.push([[u,0],[f,1],[1,1],[1,0]]);break;case 3:h=r.interpolate(p,s,i),c=r.interpolate(a,n,i);r.polygons_full&&(g.edges.right={path:[[1,c],[0,h]],move:{x:-1,y:0,enter:"right"}}),r.polygons&&g.polygons.push([[0,h],[0,1],[1,1],[1,c]]);break;case 6:u=r.interpolate(p,a,i),f=r.interpolate(s,n,i);r.polygons_full&&(g.edges.top={path:[[f,1],[u,0]],move:{x:0,y:-1,enter:"top"}}),r.polygons&&g.polygons.push([[0,0],[0,1],[f,1],[u,0]]);break;case 10:h=r.interpolate(p,s,i),c=r.interpolate(a,n,i),u=r.interpolate(p,a,i),f=r.interpolate(s,n,i);var y=(p+a+n+s)/4;r.polygons_full&&(y<i?(g.edges.left={path:[[0,h],[f,1]],move:{x:0,y:1,enter:"bottom"}},g.edges.right={path:[[1,c],[u,0]],move:{x:0,y:-1,enter:"top"}}):(g.edges.right={path:[[1,c],[f,1]],move:{x:0,y:1,enter:"bottom"}},g.edges.left={path:[[0,h],[u,0]],move:{x:0,y:-1,enter:"top"}})),r.polygons&&(y<i?g.polygons.push([[0,0],[0,h],[f,1],[1,1],[1,c],[u,0]]):(g.polygons.push([[0,0],[0,h],[u,0]]),g.polygons.push([[f,1],[1,1],[1,c]])));break;case 5:h=r.interpolate(p,s,i),c=r.interpolate(a,n,i),u=r.interpolate(p,a,i),f=r.interpolate(s,n,i),y=(p+a+n+s)/4;r.polygons_full&&(y<i?(g.edges.bottom={path:[[u,0],[0,h]],move:{x:-1,y:0,enter:"right"}},g.edges.top={path:[[f,1],[1,c]],move:{x:1,y:0,enter:"left"}}):(g.edges.top={path:[[f,1],[0,h]],move:{x:-1,y:0,enter:"right"}},g.edges.bottom={path:[[u,0],[1,c]],move:{x:1,y:0,enter:"left"}})),r.polygons&&(y<i?g.polygons.push([[0,h],[0,1],[f,1],[1,c],[1,0],[u,0]]):(g.polygons.push([[0,h],[0,1],[f,1]]),g.polygons.push([[u,0],[1,c],[1,0]])))}return g}}e.isoLines=t,e.isoContours=t,Object.defineProperty(e,"__esModule",{value:!0})});
