/*!
* MarchingSquaresJS
* version 1.2.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2018 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.MarchingSquaresJS=e.MarchingSquaresJS||{})}(this,function(e){"use strict";function i(e,t,n){return e<t?(n-e)/(t-e):(e-n)/(e-t)}function p(e,t,n,o){var a;return o<n&&(a=n,n=o,o=a),e<t?e<n?(n-e)/(t-e):(o-e)/(t-e):o<e?(e-o)/(e-t):(e-n)/(e-t)}function g(e,t,n,o){return e<t?(n-e)/(t-e):(e-o)/(e-t)}function h(e,t,n,o){return e<t?(o-e)/(t-e):(e-n)/(e-t)}function m(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.quadTree=!1}function J(e,t,n,o){var a=[];return e.polygons.forEach(function(e){e.forEach(function(e){e[0]+=t,e[1]+=n}),o.linearRing&&e.push(e[0]),a.push(e)}),a}function I(e,t,n,o){var a=e,r=t;return 0===n?(a+=1,r+=o[0][1]):1===n?a+=o[0][0]:2===n?r+=o[0][1]:3===n&&(a+=o[0][0],r+=1),[a,r]}function R(e,t,n){var o=e,a=t;return 0===n?o++:1===n||(2===n?a++:3===n&&(o++,a++)),[o,a]}function t(e,t,n){if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data should be an array of arrays");if(null==t)throw new Error("threshold is required");if(isNaN(+t))throw new Error("threshold must be a number");if(n&&"object"!=typeof n)throw new Error("options must be an object");var o=function(e){var t,n,o,a,r;for(a=new m,e=e||{},r=Object.keys(a),t=0;t<r.length;t++)null!=(o=e[n=r[t]])&&(a[n]=o);return a.polygons_full=!a.polygons,a.interpolate=i,a}(n);o.verbose&&console.log("MarchingSquaresJS-isoContours: computing isocontour for "+t);var a,r={rows:e.length-1,cols:e[0].length-1,cells:[],threshold:t};o.threshold=t;for(var l=0;l<r.rows;++l){r.cells[l]=[];for(var s=0;s<r.cols;++s)r.cells[l][s]=b(e,s,l,o)}return o.polygons?(o.verbose&&console.log("MarchingSquaresJS-isoContours: returning single polygons for each grid cell"),a=function(e,t){for(var n=e.rows,o=e.cols,a=[],r=0;r<n;r++)for(var l=0;l<o;l++)void 0!==e.cells[r][l]&&(a=a.concat(J(e.cells[r][l],l,r,t)));return a}(r,o)):(o.verbose&&console.log("MarchingSquaresJS-isoContours: returning iso lines (polygon paths) for entire data grid"),a=function(e,t){for(var n=e.rows,o=e.cols,a=[],r=["right","bottom","left","top"],l=[0,-1,0,1],s=[-1,0,1,0],i={bottom:1,left:2,top:3,right:0},p=!0,g=0;g<n;g++)if(e.cells[g][0].x0>=e.threshold||e.cells[g][o-1].x1>=e.threshold){p=!1;break}if(p&&(e.cells[n-1][0].x3>=e.threshold||e.cells[n-1][o-1].x2>=e.threshold)&&(p=!1),p)for(var h=0;h<o-1;h++)if(e.cells[0][h].x1>=e.threshold||e.cells[n-1][h].x2>e.threshold){p=!1;break}for(p&&(t.linearRing?a.push([[0,0],[0,n],[o,n],[o,0],[0,0]]):a.push([[0,0],[0,n],[o,n],[o,0]])),g=0;g<n;g++)for(h=0;h<o;h++)if(void 0!==e.cells[g][h]){var m=e.cells[g][h];if(15===m.cval)continue;for(var b=null,u=0;u<4;u++)if(b=r[u],"object"==typeof m.edges[b]){var c=[],y=b,_=h,x=g,V=!1,f=[h+(v=m.edges[b]).path[0][0],g+v.path[0][1]];for(c.push(f);!V;){var d=e.cells[x][_];if("object"!=typeof d.edges[y])break;var v=d.edges[y];delete d.edges[y];var k=v.path[1];if(k[0]+=_,k[1]+=x,c.push(k),y=v.move.enter,_+=v.move.x,x+=v.move.y,void 0===e.cells[x]||void 0===e.cells[x][_]){if(!t.linearRing)break;var w=0,B=0;if(_===o?(_--,w=0):_<0?(_++,w=2):x===n?(x--,w=3):x<0&&(x++,w=1),_===h&&x===g&&w===i[b]){V=!0,y=b;break}for(;;){var N=!1;if(4<B){console.log("Direction change counter overflow! This should never happen!");break}d=e.cells[x][_];var E=r[w];if("object"==typeof d.edges[E]){v=d.edges[E],c.push(I(_,x,w,v.path)),y=E,N=!0;break}if(N)break;if(c.push(R(_,x,w)),_+=l[w],x+=s[w],void 0!==e.cells[x]&&void 0!==e.cells[x][_]||(_-=l[w],x-=s[w],w=(w+1)%4,B++),_===h&&x===g&&w===i[b]){V=!0,y=b;break}}}}!t.linearRing||c[c.length-1][0]===f[0]&&c[c.length-1][1]===f[1]||c.push(f),a.push(c)}}return a}(r,o)),"function"==typeof o.successCallback&&o.successCallback(a),a}function b(e,t,n,o){var a=0,r=e[n+1][t],l=e[n+1][t+1],s=e[n][t+1],i=e[n][t],p=o.threshold;if(!(isNaN(i)||isNaN(s)||isNaN(l)||isNaN(r))){a|=p<=r?8:0,a|=p<=l?4:0,a|=p<=s?2:0;var g={cval:a=+(a|=p<=i?1:0),polygons:[],edges:{},x0:i,x1:s,x2:l,x3:r};switch(a){case 0:o.polygons&&g.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:var h=o.interpolate(i,r,p),m=o.interpolate(i,s,p);o.polygons_full&&(g.edges.left={path:[[0,h],[m,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&g.polygons.push([[0,0],[0,h],[m,0]]);break;case 13:m=o.interpolate(i,s,p);var b=o.interpolate(s,l,p);o.polygons_full&&(g.edges.bottom={path:[[m,0],[1,b]],move:{x:1,y:0,enter:"left"}}),o.polygons&&g.polygons.push([[m,0],[1,b],[1,0]]);break;case 11:b=o.interpolate(s,l,p);var u=o.interpolate(r,l,p);o.polygons_full&&(g.edges.right={path:[[1,b],[u,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&g.polygons.push([[1,b],[u,1],[1,1]]);break;case 7:h=o.interpolate(i,r,p),u=o.interpolate(r,l,p);o.polygons_full&&(g.edges.top={path:[[u,1],[0,h]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&g.polygons.push([[u,1],[0,h],[0,1]]);break;case 1:h=o.interpolate(i,r,p),m=o.interpolate(i,s,p);o.polygons_full&&(g.edges.bottom={path:[[m,0],[0,h]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&g.polygons.push([[m,0],[0,h],[0,1],[1,1],[1,0]]);break;case 2:m=o.interpolate(i,s,p),b=o.interpolate(s,l,p);o.polygons_full&&(g.edges.right={path:[[1,b],[m,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&g.polygons.push([[0,0],[0,1],[1,1],[1,b],[m,0]]);break;case 4:b=o.interpolate(s,l,p),u=o.interpolate(r,l,p);o.polygons_full&&(g.edges.top={path:[[u,1],[1,b]],move:{x:1,y:0,enter:"left"}}),o.polygons&&g.polygons.push([[0,0],[0,1],[u,1],[1,b],[1,0]]);break;case 8:h=o.interpolate(i,r,p),u=o.interpolate(r,l,p);o.polygons_full&&(g.edges.left={path:[[0,h],[u,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&g.polygons.push([[0,0],[0,h],[u,1],[1,1],[1,0]]);break;case 12:h=o.interpolate(i,r,p),b=o.interpolate(s,l,p);o.polygons_full&&(g.edges.left={path:[[0,h],[1,b]],move:{x:1,y:0,enter:"left"}}),o.polygons&&g.polygons.push([[0,0],[0,h],[1,b],[1,0]]);break;case 9:m=o.interpolate(i,s,p),u=o.interpolate(r,l,p);o.polygons_full&&(g.edges.bottom={path:[[m,0],[u,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&g.polygons.push([[m,0],[u,1],[1,1],[1,0]]);break;case 3:h=o.interpolate(i,r,p),b=o.interpolate(s,l,p);o.polygons_full&&(g.edges.right={path:[[1,b],[0,h]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&g.polygons.push([[0,h],[0,1],[1,1],[1,b]]);break;case 6:m=o.interpolate(i,s,p),u=o.interpolate(r,l,p);o.polygons_full&&(g.edges.top={path:[[u,1],[m,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&g.polygons.push([[0,0],[0,1],[u,1],[m,0]]);break;case 10:h=o.interpolate(i,r,p),b=o.interpolate(s,l,p),m=o.interpolate(i,s,p),u=o.interpolate(r,l,p);var c=(i+s+l+r)/4;o.polygons_full&&(c<p?(g.edges.left={path:[[0,h],[u,1]],move:{x:0,y:1,enter:"bottom"}},g.edges.right={path:[[1,b],[m,0]],move:{x:0,y:-1,enter:"top"}}):(g.edges.right={path:[[1,b],[u,1]],move:{x:0,y:1,enter:"bottom"}},g.edges.left={path:[[0,h],[m,0]],move:{x:0,y:-1,enter:"top"}})),o.polygons&&(c<p?g.polygons.push([[0,0],[0,h],[u,1],[1,1],[1,b],[m,0]]):(g.polygons.push([[0,0],[0,h],[m,0]]),g.polygons.push([[u,1],[1,1],[1,b]])));break;case 5:h=o.interpolate(i,r,p),b=o.interpolate(s,l,p),m=o.interpolate(i,s,p),u=o.interpolate(r,l,p),c=(i+s+l+r)/4;o.polygons_full&&(c<p?(g.edges.bottom={path:[[m,0],[0,h]],move:{x:-1,y:0,enter:"right"}},g.edges.top={path:[[u,1],[1,b]],move:{x:1,y:0,enter:"left"}}):(g.edges.top={path:[[u,1],[0,h]],move:{x:-1,y:0,enter:"right"}},g.edges.bottom={path:[[m,0],[1,b]],move:{x:1,y:0,enter:"left"}})),o.polygons&&(c<p?g.polygons.push([[0,h],[0,1],[u,1],[1,b],[1,0],[m,0]]):(g.polygons.push([[0,h],[0,1],[u,1]]),g.polygons.push([[m,0],[1,b],[1,0]])))}return g}}function u(e,t,n,o,a){this.x=t,this.y=n,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null;var r=o,l=a,s=0,i=0;if(1===o&&1===a)this.lowerBound=Math.min(e[n][t],e[n][t+1],e[n+1][t+1],e[n+1][t]),this.upperBound=Math.max(e[n][t],e[n][t+1],e[n+1][t+1],e[n+1][t]);else{if(1<o){for(;0!==r;)r>>=1,s++;o===1<<s-1&&s--,r=1<<s-1}if(1<a){for(;0!==l;)l>>=1,i++;a===1<<i-1&&i--,l=1<<i-1}this.childA=new u(e,t,n,r,l),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,0<o-r&&(this.childB=new u(e,t+r,n,o-r,l),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),0<a-l&&(this.childC=new u(e,t+r,n+l,o-r,a-l),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),0<a-l&&(this.childD=new u(e,t,n+l,r,a-l),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}function c(e){if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data must be scalar field, i.e. array of arrays");this.data=e,this.root=new u(e,0,0,e[0].length-1,e.length-1)}function y(e,t,n,o,a,r){var l=(o+n+t+e)/4;return r<l?2:l<a?0:1}u.prototype.cellsInBand=function(e,t,n){var o=[];return n=n||!0,this.lowerBound>t||this.upperBound<e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(o=o.concat(this.childA.cellsInBand(e,t,n))),this.childB&&(o=o.concat(this.childB.cellsInBand(e,t,n))),this.childC&&(o=o.concat(this.childC.cellsInBand(e,t,n))),this.childD&&(o=o.concat(this.childD.cellsInBand(e,t,n)))):(n||this.lowerBound<=e||this.upperBound>=t)&&o.push({x:this.x,y:this.y})),o};var _={square:function(e,t,n,o,a,r){r.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,0]])},triangle_bl:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate(t,a,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,s],[l,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,s],[l,0],[0,0]])},triangle_br:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[l,0],[1,s]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[l,0],[1,s],[1,0]])},triangle_tr:function(e,t,n,o,a,r){var l=r.interpolate(n,o,r.minV,r.maxV),s=r.interpolate(a,o,r.minV,r.maxV);r.polygons_full&&(e.edges.rt={path:[[1,l],[s,1]],move:{x:0,y:1,enter:"br"}}),r.polygons&&e.polygons.push([[1,l],[s,1],[1,1]])},triangle_tl:function(e,t,n,o,a,r){var l=r.interpolate(a,o,r.minV,r.maxV),s=r.interpolate(t,a,r.minV,r.maxV);r.polygons_full&&(e.edges.tl={path:[[l,1],[0,s]],move:{x:-1,y:0,enter:"rt"}}),r.polygons&&e.polygons.push([[0,s],[0,1],[l,1]])},tetragon_t:function(e,t,n,o,a,r){var l=r.interpolate(n,o,r.minV,r.maxV),s=r.interpolate(t,a,r.minV,r.maxV);r.polygons_full&&(e.edges.rt={path:[[1,l],[0,s]],move:{x:-1,y:0,enter:"rt"}}),r.polygons&&e.polygons.push([[0,s],[0,1],[1,1],[1,l]])},tetragon_r:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate(a,o,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[l,0],[s,1]],move:{x:0,y:1,enter:"br"}}),r.polygons&&e.polygons.push([[l,0],[s,1],[1,1],[1,0]])},tetragon_b:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,l],[1,s]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[0,0],[0,l],[1,s],[1,0]])},tetragon_l:function(e,t,n,o,a,r){var l=r.interpolate(a,o,r.minV,r.maxV),s=r.interpolate(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.tl={path:[[l,1],[s,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,0],[0,1],[l,1],[s,0]])},tetragon_bl:function(e,t,n,o,a,r){var l=r.interpolate_a(t,n,r.minV,r.maxV),s=r.interpolate_b(t,n,r.minV,r.maxV),i=r.interpolate_a(t,a,r.minV,r.maxV),p=r.interpolate_b(t,a,r.minV,r.maxV);r.polygons_full&&(e.edges.bl={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[s,0]],move:{x:0,y:-1,enter:"tr"}}),r.polygons&&e.polygons.push([[l,0],[0,i],[0,p],[s,0]])},tetragon_br:function(e,t,n,o,a,r){var l=r.interpolate_a(t,n,r.minV,r.maxV),s=r.interpolate_b(t,n,r.minV,r.maxV),i=r.interpolate_a(n,o,r.minV,r.maxV),p=r.interpolate_b(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.bl={path:[[l,0],[1,p]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,i],[s,0]],move:{x:0,y:-1,enter:"tr"}}),r.polygons&&e.polygons.push([[l,0],[1,p],[1,i],[s,0]])},tetragon_tr:function(e,t,n,o,a,r){var l=r.interpolate_a(a,o,r.minV,r.maxV),s=r.interpolate_b(a,o,r.minV,r.maxV),i=r.interpolate_b(n,o,r.minV,r.maxV),p=r.interpolate_a(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.rb={path:[[1,p],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[s,1],[1,i]],move:{x:1,y:0,enter:"lt"}}),r.polygons&&e.polygons.push([[1,p],[l,1],[s,1],[1,i]])},tetragon_tl:function(e,t,n,o,a,r){var l=r.interpolate_a(a,o,r.minV,r.maxV),s=r.interpolate_b(a,o,r.minV,r.maxV),i=r.interpolate_b(t,a,r.minV,r.maxV),p=r.interpolate_a(t,a,r.minV,r.maxV);r.polygons_full&&(e.edges.tr={path:[[s,1],[0,p]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,i],[l,1]],move:{x:0,y:1,enter:"bl"}}),r.polygons&&e.polygons.push([[s,1],[0,p],[0,i],[l,1]])},tetragon_lr:function(e,t,n,o,a,r){var l=r.interpolate_a(t,a,r.minV,r.maxV),s=r.interpolate_b(t,a,r.minV,r.maxV),i=r.interpolate_b(n,o,r.minV,r.maxV),p=r.interpolate_a(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.lt={path:[[0,s],[1,i]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rb"}}),r.polygons&&e.polygons.push([[0,l],[0,s],[1,i],[1,p]])},tetragon_tb:function(e,t,n,o,a,r){var l=r.interpolate_a(a,o,r.minV,r.maxV),s=r.interpolate_b(a,o,r.minV,r.maxV),i=r.interpolate_b(t,n,r.minV,r.maxV),p=r.interpolate_a(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.tr={path:[[s,1],[i,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[p,0],[l,1]],move:{x:0,y:1,enter:"bl"}}),r.polygons&&e.polygons.push([[p,0],[l,1],[s,1],[i,0]])},pentagon_tr:function(e,t,n,o,a,r){var l=r.interpolate(a,o,r.minV,r.maxV),s=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.tl={path:[[l,1],[1,s]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[0,0],[0,1],[l,1],[1,s],[1,0]])},pentagon_tl:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate(a,o,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,l],[s,1]],move:{x:0,y:1,enter:"br"}}),r.polygons&&e.polygons.push([[0,0],[0,l],[s,1],[1,1],[1,0]])},pentagon_br:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.rt={path:[[1,s],[l,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,s],[l,0]])},pentagon_bl:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[s,0],[0,l]],move:{x:-1,y:0,enter:"rt"}}),r.polygons&&e.polygons.push([[0,l],[0,1],[1,1],[1,0],[s,0]])},pentagon_tr_rl:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate(a,o,r.minV,r.maxV),i=r.interpolate_b(n,o,r.minV,r.maxV),p=r.interpolate_a(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.tl={path:[[s,1],[1,i]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rt"}}),r.polygons&&e.polygons.push([[0,l],[0,1],[s,1],[1,i],[1,p]])},pentagon_rb_bt:function(e,t,n,o,a,r){var l=r.interpolate(n,o,r.minV,r.maxV),s=r.interpolate_b(t,n,r.minV,r.maxV),i=r.interpolate_a(t,n,r.minV,r.maxV),p=r.interpolate(a,o,r.minV,r.maxV);r.polygons_full&&(e.edges.rt={path:[[1,l],[s,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[i,0],[p,1]],move:{x:0,y:1,enter:"br"}}),r.polygons&&e.polygons.push([[p,1],[1,1],[1,l],[s,0],[i,0]])},pentagon_bl_lr:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate_a(t,a,r.minV,r.maxV),i=r.interpolate_b(t,a,r.minV,r.maxV),p=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,i],[1,p]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[l,0],[0,s],[0,i],[1,p],[1,0]])},pentagon_lt_tb:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate_a(a,o,r.minV,r.maxV),i=r.interpolate_b(a,o,r.minV,r.maxV),p=r.interpolate(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,l],[s,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[i,1],[p,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,0],[0,l],[s,1],[i,1],[p,0]])},pentagon_bl_tb:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate(a,o,r.minV,r.maxV),i=r.interpolate_b(t,n,r.minV,r.maxV),p=r.interpolate_a(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.bl={path:[[p,0],[0,l]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[s,1],[i,0]],move:{x:0,y:-1,enter:"tr"}}),r.polygons&&e.polygons.push([[0,l],[0,1],[s,1],[i,0],[p,0]])},pentagon_lt_rl:function(e,t,n,o,a,r){var l=r.interpolate_a(t,a,r.minV,r.maxV),s=r.interpolate_b(t,a,r.minV,r.maxV),i=r.interpolate(a,o,r.minV,r.maxV),p=r.interpolate(n,a,r.minV,r.maxV);r.polygons_full&&(e.edges.lt={path:[[0,s],[i,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rb"}}),r.polygons&&e.polygons.push([[0,l],[0,s],[i,1],[1,1],[1,p]])},pentagon_tr_bt:function(e,t,n,o,a,r){var l=r.interpolate_a(a,o,r.minV,r.maxV),s=r.interpolate_b(a,o,r.minV,r.maxV),i=r.interpolate(n,o,r.minV,r.maxV),p=r.interpolate(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[p,0],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[s,1],[1,i]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[l,1],[s,1],[1,i],[1,0],[p,0]])},pentagon_rb_lr:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate_b(n,o,r.minV,r.maxV),i=r.interpolate_a(n,o,r.minV,r.maxV),p=r.interpolate(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,l],[1,s]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,i],[p,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,0],[0,l],[1,s],[1,i],[p,0]])},hexagon_lt_tr:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate_a(a,o,r.minV,r.maxV),i=r.interpolate_b(a,o,r.minV,r.maxV),p=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,l],[s,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[i,1],[1,p]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[0,0],[0,l],[s,1],[i,1],[1,p],[1,0]])},hexagon_bl_lt:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate_a(t,a,r.minV,r.maxV),i=r.interpolate_b(t,a,r.minV,r.maxV),p=r.interpolate(a,o,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,i],[p,1]],move:{x:0,y:1,enter:"br"}}),r.polygons&&e.polygons.push([[l,0],[0,s],[0,i],[p,1],[1,1],[1,0]])},hexagon_bl_rb:function(e,t,n,o,a,r){var l=r.interpolate_a(t,n,r.minV,r.maxV),s=r.interpolate_b(t,n,r.minV,r.maxV),i=r.interpolate(t,a,r.minV,r.maxV),p=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.bl={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rt"}},e.edges.rt={path:[[1,p],[s,0]],move:{x:0,y:-1,enter:"tr"}}),r.polygons&&e.polygons.push([[l,0],[0,i],[0,1],[1,1],[1,p],[s,0]])},hexagon_tr_rb:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate(a,o,r.minV,r.maxV),i=r.interpolate_b(n,o,r.minV,r.maxV),p=r.interpolate_a(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.tl={path:[[s,1],[1,i]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[l,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,0],[0,1],[s,1],[1,i],[1,p],[l,0]])},hexagon_lt_rb:function(e,t,n,o,a,r){var l=r.interpolate(t,a,r.minV,r.maxV),s=r.interpolate(a,o,r.minV,r.maxV),i=r.interpolate(n,o,r.minV,r.maxV),p=r.interpolate(t,n,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,l],[s,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,i],[p,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,0],[0,l],[s,1],[1,1],[1,i],[p,0]])},hexagon_bl_tr:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate(t,a,r.minV,r.maxV),i=r.interpolate(a,o,r.minV,r.maxV),p=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[i,1],[1,p]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[l,0],[0,s],[0,1],[i,1],[1,p],[1,0]])},heptagon_tr:function(e,t,n,o,a,r){var l=r.interpolate_a(t,n,r.minV,r.maxV),s=r.interpolate_b(t,n,r.minV,r.maxV),i=r.interpolate_a(t,a,r.minV,r.maxV),p=r.interpolate_b(t,a,r.minV,r.maxV),g=r.interpolate(a,o,r.minV,r.maxV),h=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.bl={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[g,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,h],[s,0]],move:{x:0,y:-1,enter:"tr"}}),r.polygons&&e.polygons.push([[l,0],[0,i],[0,p],[g,1],[1,1],[1,h],[s,0]])},heptagon_bl:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate(t,a,r.minV,r.maxV),i=r.interpolate_a(a,o,r.minV,r.maxV),p=r.interpolate_b(a,o,r.minV,r.maxV),g=r.interpolate_b(n,o,r.minV,r.maxV),h=r.interpolate_a(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.lb={path:[[0,s],[i,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[p,1],[1,g]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,h],[l,0]],move:{x:0,y:-1,enter:"tl"}}),r.polygons&&e.polygons.push([[0,0],[0,s],[i,1],[p,1],[1,g],[1,h],[l,0]])},heptagon_tl:function(e,t,n,o,a,r){var l=r.interpolate_a(t,n,r.minV,r.maxV),s=r.interpolate_b(t,n,r.minV,r.maxV),i=r.interpolate(t,a,r.minV,r.maxV),p=r.interpolate(a,o,r.minV,r.maxV),g=r.interpolate_b(n,o,r.minV,r.maxV),h=r.interpolate_a(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.bl={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[p,1],[1,g]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,h],[s,0]],move:{x:0,y:-1,enter:"tr"}}),r.polygons&&e.polygons.push([[l,0],[0,i],[0,1],[p,1],[1,g],[1,h],[s,0]])},heptagon_br:function(e,t,n,o,a,r){var l=r.interpolate(t,n,r.minV,r.maxV),s=r.interpolate_a(t,a,r.minV,r.maxV),i=r.interpolate_b(t,a,r.minV,r.maxV),p=r.interpolate_a(a,o,r.minV,r.maxV),g=r.interpolate_b(a,o,r.minV,r.maxV),h=r.interpolate(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.br={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,i],[p,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[g,1],[1,h]],move:{x:1,y:0,enter:"lb"}}),r.polygons&&e.polygons.push([[l,0],[0,s],[0,i],[p,1],[g,1],[1,h],[1,0]])},octagon:function(e,t,n,o,a,r){var l=r.interpolate_a(t,n,r.minV,r.maxV),s=r.interpolate_b(t,n,r.minV,r.maxV),i=r.interpolate_a(t,a,r.minV,r.maxV),p=r.interpolate_b(t,a,r.minV,r.maxV),g=r.interpolate_a(a,o,r.minV,r.maxV),h=r.interpolate_b(a,o,r.minV,r.maxV),m=r.interpolate_b(n,o,r.minV,r.maxV),b=r.interpolate_a(n,o,r.minV,r.maxV);r.polygons_full&&(e.edges.bl={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[g,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[h,1],[1,m]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,b],[s,0]],move:{x:0,y:-1,enter:"tr"}}),r.polygons&&e.polygons.push([[l,0],[0,i],[0,p],[g,1],[h,1],[1,m],[1,b],[s,0]])}};function T(e,t,n,o){var a=0,r=e[n+1][t],l=e[n+1][t+1],s=e[n][t+1],i=e[n][t],p=o.minV,g=o.maxV;if(!(isNaN(i)||isNaN(s)||isNaN(l)||isNaN(r))){a|=r<p?0:g<r?128:64,a|=l<p?0:g<l?32:16,a|=s<p?0:g<s?8:4;var h=0,m={cval:a=+(a|=i<p?0:g<i?2:1),polygons:[],edges:{},x0:i,x1:s,x2:l,x3:r,x:t,y:n};switch(a){case 85:_.square(m,i,s,l,r,o);case 0:case 170:break;case 169:_.triangle_bl(m,i,s,l,r,o);break;case 166:_.triangle_br(m,i,s,l,r,o);break;case 154:_.triangle_tr(m,i,s,l,r,o);break;case 106:_.triangle_tl(m,i,s,l,r,o);break;case 1:_.triangle_bl(m,i,s,l,r,o);break;case 4:_.triangle_br(m,i,s,l,r,o);break;case 16:_.triangle_tr(m,i,s,l,r,o);break;case 64:_.triangle_tl(m,i,s,l,r,o);break;case 168:_.tetragon_bl(m,i,s,l,r,o);break;case 162:_.tetragon_br(m,i,s,l,r,o);break;case 138:_.tetragon_tr(m,i,s,l,r,o);break;case 42:_.tetragon_tl(m,i,s,l,r,o);break;case 2:_.tetragon_bl(m,i,s,l,r,o);break;case 8:_.tetragon_br(m,i,s,l,r,o);break;case 32:_.tetragon_tr(m,i,s,l,r,o);break;case 128:_.tetragon_tl(m,i,s,l,r,o);break;case 5:_.tetragon_b(m,i,s,l,r,o);break;case 20:_.tetragon_r(m,i,s,l,r,o);break;case 80:_.tetragon_t(m,i,s,l,r,o);break;case 65:_.tetragon_l(m,i,s,l,r,o);break;case 165:_.tetragon_b(m,i,s,l,r,o);break;case 150:_.tetragon_r(m,i,s,l,r,o);break;case 90:_.tetragon_t(m,i,s,l,r,o);break;case 105:_.tetragon_l(m,i,s,l,r,o);break;case 160:_.tetragon_lr(m,i,s,l,r,o);break;case 130:_.tetragon_tb(m,i,s,l,r,o);break;case 10:_.tetragon_lr(m,i,s,l,r,o);break;case 40:_.tetragon_tb(m,i,s,l,r,o);break;case 101:_.pentagon_tr(m,i,s,l,r,o);break;case 149:_.pentagon_tl(m,i,s,l,r,o);break;case 86:_.pentagon_bl(m,i,s,l,r,o);break;case 89:_.pentagon_br(m,i,s,l,r,o);break;case 69:_.pentagon_tr(m,i,s,l,r,o);break;case 21:_.pentagon_tl(m,i,s,l,r,o);break;case 84:_.pentagon_bl(m,i,s,l,r,o);break;case 81:_.pentagon_br(m,i,s,l,r,o);break;case 96:_.pentagon_tr_rl(m,i,s,l,r,o);break;case 24:_.pentagon_rb_bt(m,i,s,l,r,o);break;case 6:_.pentagon_bl_lr(m,i,s,l,r,o);break;case 129:_.pentagon_lt_tb(m,i,s,l,r,o);break;case 74:_.pentagon_tr_rl(m,i,s,l,r,o);break;case 146:_.pentagon_rb_bt(m,i,s,l,r,o);break;case 164:_.pentagon_bl_lr(m,i,s,l,r,o);break;case 41:_.pentagon_lt_tb(m,i,s,l,r,o);break;case 66:_.pentagon_bl_tb(m,i,s,l,r,o);break;case 144:_.pentagon_lt_rl(m,i,s,l,r,o);break;case 36:_.pentagon_tr_bt(m,i,s,l,r,o);break;case 9:_.pentagon_rb_lr(m,i,s,l,r,o);break;case 104:_.pentagon_bl_tb(m,i,s,l,r,o);break;case 26:_.pentagon_lt_rl(m,i,s,l,r,o);break;case 134:_.pentagon_tr_bt(m,i,s,l,r,o);break;case 161:_.pentagon_rb_lr(m,i,s,l,r,o);break;case 37:_.hexagon_lt_tr(m,i,s,l,r,o);break;case 148:_.hexagon_bl_lt(m,i,s,l,r,o);break;case 82:_.hexagon_bl_rb(m,i,s,l,r,o);break;case 73:_.hexagon_tr_rb(m,i,s,l,r,o);break;case 133:_.hexagon_lt_tr(m,i,s,l,r,o);break;case 22:_.hexagon_bl_lt(m,i,s,l,r,o);break;case 88:_.hexagon_bl_rb(m,i,s,l,r,o);break;case 97:_.hexagon_tr_rb(m,i,s,l,r,o);break;case 145:case 25:_.hexagon_lt_rb(m,i,s,l,r,o);break;case 70:case 100:_.hexagon_bl_tr(m,i,s,l,r,o);break;case 17:0===(h=y(i,s,l,r,p,g))?(_.triangle_bl(m,i,s,l,r,o),_.triangle_tr(m,i,s,l,r,o)):_.hexagon_lt_rb(m,i,s,l,r,o);break;case 68:0===(h=y(i,s,l,r,p,g))?(_.triangle_tl(m,i,s,l,r,o),_.triangle_br(m,i,s,l,r,o)):_.hexagon_bl_tr(m,i,s,l,r,o);break;case 153:2===(h=y(i,s,l,r,p,g))?(_.triangle_bl(m,i,s,l,r,o),_.triangle_tr(m,i,s,l,r,o)):_.hexagon_lt_rb(m,i,s,l,r,o);break;case 102:2===(h=y(i,s,l,r,p,g))?(_.triangle_tl(m,i,s,l,r,o),_.triangle_br(m,i,s,l,r,o)):_.hexagon_bl_tr(m,i,s,l,r,o);break;case 152:2===(h=y(i,s,l,r,p,g))?(_.triangle_tr(m,i,s,l,r,o),_.tetragon_bl(m,i,s,l,r,o)):_.heptagon_tr(m,i,s,l,r,o);break;case 137:2===(h=y(i,s,l,r,p,g))?(_.triangle_bl(m,i,s,l,r,o),_.tetragon_tr(m,i,s,l,r,o)):_.heptagon_bl(m,i,s,l,r,o);break;case 98:2===(h=y(i,s,l,r,p,g))?(_.triangle_tl(m,i,s,l,r,o),_.tetragon_br(m,i,s,l,r,o)):_.heptagon_tl(m,i,s,l,r,o);break;case 38:2===(h=y(i,s,l,r,p,g))?(_.triangle_br(m,i,s,l,r,o),_.tetragon_tl(m,i,s,l,r,o)):_.heptagon_br(m,i,s,l,r,o);break;case 18:0===(h=y(i,s,l,r,p,g))?(_.triangle_tr(m,i,s,l,r,o),_.tetragon_bl(m,i,s,l,r,o)):_.heptagon_tr(m,i,s,l,r,o);break;case 33:0===(h=y(i,s,l,r,p,g))?(_.triangle_bl(m,i,s,l,r,o),_.tetragon_tr(m,i,s,l,r,o)):_.heptagon_bl(m,i,s,l,r,o);break;case 72:0===(h=y(i,s,l,r,p,g))?(_.triangle_tl(m,i,s,l,r,o),_.tetragon_br(m,i,s,l,r,o)):_.heptagon_tl(m,i,s,l,r,o);break;case 132:0===(h=y(i,s,l,r,p,g))?(_.triangle_br(m,i,s,l,r,o),_.tetragon_tl(m,i,s,l,r,o)):_.heptagon_br(m,i,s,l,r,o);break;case 136:0===(h=y(i,s,l,r,p,g))?(_.tetragon_tl(m,i,s,l,r,o),_.tetragon_br(m,i,s,l,r,o)):1===h?_.octagon(m,i,s,l,r,o):(_.tetragon_bl(m,i,s,l,r,o),_.tetragon_tr(m,i,s,l,r,o));break;case 34:0===(h=y(i,s,l,r,p,g))?(_.tetragon_bl(m,i,s,l,r,o),_.tetragon_tr(m,i,s,l,r,o)):1===h?_.octagon(m,i,s,l,r,o):(_.tetragon_tl(m,i,s,l,r,o),_.tetragon_br(m,i,s,l,r,o))}return m}}e.isoLines=t,e.isoBands=function(e,t,o,n){var a,r,l,s=null,A=null,M=null,S=null,C=!1,j=[];if(!e)throw new Error("data is required");if(null==t)throw new Error("lowerBound is required");if(null==o)throw new Error("bandWidth is required");if(n&&"object"!=typeof n)throw new Error("options must be an object");if(l=function(e){var t,n,o,a,r;for(a=new m,e=e||{},r=Object.keys(a),t=0;t<r.length;t++)null!=(o=e[n=r[t]])&&(a[n]=o);return a.polygons_full=!a.polygons,a.interpolate=p,a.interpolate_a=g,a.interpolate_b=h,a}(n),M instanceof c)A=(s=e).root,M=e.data;else{if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("input is neither array of arrays nor object retrieved from 'prepareData()'");M=e}if(Array.isArray(t)){for(C=!0,a=0;a<t.length;a++)if(isNaN(+t[a]))throw new Error("lowerBound["+a+"] is not a number");if(Array.isArray(o)){if(t.length!==o.length)throw new Error("lowerBound and bandWidth have unequal lengths");for(a=0;a<o.length;a++)if(isNaN(+o[a]))throw new Error("bandWidth["+a+"] is not a number")}else{if(isNaN(+o))throw new Error("bandWidth must be a number");var i=[];for(a=0;a<t.length;a++)i.push(o);o=i}}else{if(isNaN(+t))throw new Error("lowerBound must be a number");if(t=[t],isNaN(+o))throw new Error("bandWidth must be a number");o=[o]}l.quadTree&&!A&&(s=new c(M),A=s.root,M=s.data),l.verbose&&(l.polygons?console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"):console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),C&&console.log("MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band"));var D=[];return t.forEach(function(e,t){if(j=[],l.minV=e,l.maxV=e+o[t],l.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+e+":"+(e+o[t])+"]"),l.polygons)if(l.quadTree)A.cellsInBand(l.minV,l.maxV,!!l.polygons).forEach(function(e){j=j.concat(J(T(M,e.x,e.y,l),e.x,e.y,l))});else for(r=0;r<M.length-1;++r)for(a=0;a<M[0].length-1;++a)j=j.concat(J(T(M,a,r,l),a,r,l));else{if(S=[],l.quadTree)A.cellsInBand(l.minV,l.maxV,!!l.polygons).forEach(function(e){void 0===S[e.x]&&(S[e.x]=[]),S[e.x][e.y]=T(M,e.x,e.y,l)});else for(a=0;a<M[0].length-1;++a)for(S[a]=[],r=0;r<M.length-1;++r)S[a][r]=T(M,a,r,l);s=S,i=l,d=[],v=(n=M).length-1,k=n[0].length-1,w=[["rt","rb"],["br","bl"],["lb","lt"],["tl","tr"]],B=[0,-1,0,1],N=[-1,0,1,0],E=["bl","lb","lt","tl","tr","rt","rb","br"],q={bl:1,br:1,lb:2,lt:2,tl:3,tr:3,rt:0,rb:0},function(e,t,n){for(var o=!0,a=e[0].length,r=e.length,l=0;l<r;l++)if(e[l][0]<t||e[l][0]>n||e[l][a-1]<t||e[l][a-1]>n){o=!1;break}if(o&&(e[r-1][0]<t||e[r-1][0]>n||e[r-1][a-1]<t||e[r-1][a-1]>n)&&(o=!1),o)for(var s=0;s<a-1;s++)if(e[0][s]<t||e[0][s]>n||e[r-1][s]<t||e[r-1][s]>n){o=!1;break}return o}(n,i.minV,i.maxV)&&(i.linearRing?d.push([[0,0],[0,v],[k,v],[k,0],[0,0]]):d.push([[0,0],[0,v],[k,v],[k,0]])),s.forEach(function(e,l){e.forEach(function(e,t){p=null;for(var n=0;n<8;n++)if(p=E[n],"object"==typeof e.edges[p]){for(g=[],h=e.edges[p],m=p,u=t,c=!1,y=[(b=l)+h.path[0][0],t+h.path[0][1]],g.push(y);!c&&"object"==typeof(_=s[b][u]).edges[m];)if(h=_.edges[m],delete _.edges[m],(f=h.path[1])[0]+=b,f[1]+=u,g.push(f),m=h.move.enter,b+=h.move.x,u+=h.move.y,void 0===s[b]||void 0===s[b][u]){if(V=x=0,b===k?(b--,x=0):b<0?(b++,x=2):u===v?(u--,x=3):u<0&&(u++,x=1),b===l&&u===t&&x===q[p]){c=!0,m=p;break}for(;;){var o=!1;if(4<V){console.log("Direction change counter overflow! This should never happen!");break}_=s[b][u];for(var a=0;a<w[x].length;a++){var r=w[x][a];if("object"==typeof _.edges[r]){h=_.edges[r],g.push(I(b,u,x,h.path)),m=r,o=!0;break}}if(o)break;if(g.push(R(b,u,x)),u+=N[x],void 0!==s[b+=B[x]]&&void 0!==s[b][u]||(b-=B[x],u-=N[x],x=(x+1)%4,V++),b===l&&u===t&&x===q[p]){c=!0,m=p;break}}}!i.linearRing||g[g.length-1][0]===y[0]&&g[g.length-1][1]===y[1]||g.push(y),d.push(g)}})}),j=d}var n,s,i,p,g,h,m,b,u,c,y,_,x,V,f,d,v,k,w,B,N,E,q;C?D.push(j):D=j}),"function"==typeof l.successCallback&&l.successCallback(D),D},e.isoContours=t,e.prepareData=c,Object.defineProperty(e,"__esModule",{value:!0})});
