/*
 @license GNU Affero General Public License.
 Copyright (c) 2015-2018 Ronny Lorenz <ronny@tbi.univie.ac.at>
 v. 1.2.3
 https://github.com/RaumZeit/MarchingSquares.js
*/
(function(A,B){"function"===typeof define&&define.amd?define([],function(){return{isoContours:B()}}):"object"===typeof module&&module.exports?module.exports={isoContours:B()}:A.MarchingSquaresJS={isoContours:B(),isoBands:A.MarchingSquaresJS?A.MarchingSquaresJS.isoBands:null}})(this,function(){function A(k,p,f,t){0===f?(k+=1,p+=t[0][1]):1===f?k+=t[0][0]:2===f?p+=t[0][1]:3===f&&(k+=t[0][0],p+=1);return[k,p]}function B(k,p,f){0===f?k++:1!==f&&(2===f?p++:3===f&&(k++,p++));return[k,p]}function E(k,p){for(var f=
k.rows,t=k.cols,v=[],u=0;u<f;u++)for(var w=0;w<t;w++)if("undefined"!==typeof k.cells[u][w]){var z=k.cells[u][w];15!==z.cval&&z.polygons.forEach(function(a){a.forEach(function(a){a[0]+=w;a[1]+=u});p.linearRing&&a.push(a[0]);v.push(a)})}return v}var D={successCallback:null,verbose:!1,polygons:!1,polygons_full:!0,linearRing:!0,interpolate:function(k,p,f){return k<p?(f-k)/(p-k):(k-f)/(k-p)}},v={};return function(k,p,f){f=f?f:{};for(var t=Object.keys(D),y=0;y<t.length;y++){var u=t[y],w=f[u];w="undefined"!==
typeof w&&null!==w?w:D[u];v[u]=w}v.verbose&&console.log("MarchingSquaresJS-isoContours: computing isocontour for "+p);v.polygons_full=!v.polygons;t=k.length-1;y=k[0].length-1;f={rows:t,cols:y,cells:[],threshold:p};v.threshold=p;for(p=0;p<t;++p)for(f.cells[p]=[],u=0;u<y;++u){w=f.cells[p];var z=u;var a=v;var b=0,l=k[p+1][u],m=k[p+1][u+1],r=k[p][u+1],h=k[p][u],c=a.threshold;if(isNaN(h)||isNaN(r)||isNaN(m)||isNaN(l))a=void 0;else{b=b|(l>=c?8:0)|(m>=c?4:0);b|=r>=c?2:0;b|=h>=c?1:0;b=+b;var d={cval:b,polygons:[],
edges:{},x0:h,x1:r,x2:m,x3:l};switch(b){case 0:a.polygons&&d.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 14:b=a.interpolate(h,l,c);var q=a.interpolate(h,r,c);a.polygons_full&&(d.edges.left={path:[[0,b],[q,0]],move:{x:0,y:-1,enter:"top"}});a.polygons&&d.polygons.push([[0,0],[0,b],[q,0]]);break;case 13:q=a.interpolate(h,r,c);var n=a.interpolate(r,m,c);a.polygons_full&&(d.edges.bottom={path:[[q,0],[1,n]],move:{x:1,y:0,enter:"left"}});a.polygons&&d.polygons.push([[q,0],[1,n],[1,0]]);break;case 11:n=
a.interpolate(r,m,c);var g=a.interpolate(l,m,c);a.polygons_full&&(d.edges.right={path:[[1,n],[g,1]],move:{x:0,y:1,enter:"bottom"}});a.polygons&&d.polygons.push([[1,n],[g,1],[1,1]]);break;case 7:b=a.interpolate(h,l,c);g=a.interpolate(l,m,c);a.polygons_full&&(d.edges.top={path:[[g,1],[0,b]],move:{x:-1,y:0,enter:"right"}});a.polygons&&d.polygons.push([[g,1],[0,b],[0,1]]);break;case 1:b=a.interpolate(h,l,c);q=a.interpolate(h,r,c);a.polygons_full&&(d.edges.bottom={path:[[q,0],[0,b]],move:{x:-1,y:0,enter:"right"}});
a.polygons&&d.polygons.push([[q,0],[0,b],[0,1],[1,1],[1,0]]);break;case 2:q=a.interpolate(h,r,c);n=a.interpolate(r,m,c);a.polygons_full&&(d.edges.right={path:[[1,n],[q,0]],move:{x:0,y:-1,enter:"top"}});a.polygons&&d.polygons.push([[0,0],[0,1],[1,1],[1,n],[q,0]]);break;case 4:n=a.interpolate(r,m,c);g=a.interpolate(l,m,c);a.polygons_full&&(d.edges.top={path:[[g,1],[1,n]],move:{x:1,y:0,enter:"left"}});a.polygons&&d.polygons.push([[0,0],[0,1],[g,1],[1,n],[1,0]]);break;case 8:b=a.interpolate(h,l,c);g=
a.interpolate(l,m,c);a.polygons_full&&(d.edges.left={path:[[0,b],[g,1]],move:{x:0,y:1,enter:"bottom"}});a.polygons&&d.polygons.push([[0,0],[0,b],[g,1],[1,1],[1,0]]);break;case 12:b=a.interpolate(h,l,c);n=a.interpolate(r,m,c);a.polygons_full&&(d.edges.left={path:[[0,b],[1,n]],move:{x:1,y:0,enter:"left"}});a.polygons&&d.polygons.push([[0,0],[0,b],[1,n],[1,0]]);break;case 9:q=a.interpolate(h,r,c);g=a.interpolate(l,m,c);a.polygons_full&&(d.edges.bottom={path:[[q,0],[g,1]],move:{x:0,y:1,enter:"bottom"}});
a.polygons&&d.polygons.push([[q,0],[g,1],[1,1],[1,0]]);break;case 3:b=a.interpolate(h,l,c);n=a.interpolate(r,m,c);a.polygons_full&&(d.edges.right={path:[[1,n],[0,b]],move:{x:-1,y:0,enter:"right"}});a.polygons&&d.polygons.push([[0,b],[0,1],[1,1],[1,n]]);break;case 6:q=a.interpolate(h,r,c);g=a.interpolate(l,m,c);a.polygons_full&&(d.edges.top={path:[[g,1],[q,0]],move:{x:0,y:-1,enter:"top"}});a.polygons&&d.polygons.push([[0,0],[0,1],[g,1],[q,0]]);break;case 10:b=a.interpolate(h,l,c);n=a.interpolate(r,
m,c);q=a.interpolate(h,r,c);g=a.interpolate(l,m,c);l=(h+r+m+l)/4;a.polygons_full&&(l<c?(d.edges.left={path:[[0,b],[g,1]],move:{x:0,y:1,enter:"bottom"}},d.edges.right={path:[[1,n],[q,0]],move:{x:0,y:-1,enter:"top"}}):(d.edges.right={path:[[1,n],[g,1]],move:{x:0,y:1,enter:"bottom"}},d.edges.left={path:[[0,b],[q,0]],move:{x:0,y:-1,enter:"top"}}));a.polygons&&(l<c?d.polygons.push([[0,0],[0,b],[g,1],[1,1],[1,n],[q,0]]):(d.polygons.push([[0,0],[0,b],[q,0]]),d.polygons.push([[g,1],[1,1],[1,n]])));break;
case 5:b=a.interpolate(h,l,c),n=a.interpolate(r,m,c),q=a.interpolate(h,r,c),g=a.interpolate(l,m,c),l=(h+r+m+l)/4,a.polygons_full&&(l<c?(d.edges.bottom={path:[[q,0],[0,b]],move:{x:-1,y:0,enter:"right"}},d.edges.top={path:[[g,1],[1,n]],move:{x:1,y:0,enter:"left"}}):(d.edges.top={path:[[g,1],[0,b]],move:{x:-1,y:0,enter:"right"}},d.edges.bottom={path:[[q,0],[1,n]],move:{x:1,y:0,enter:"left"}})),a.polygons&&(l<c?d.polygons.push([[0,b],[0,1],[g,1],[1,n],[1,0],[q,0]]):(d.polygons.push([[0,b],[0,1],[g,1]]),
d.polygons.push([[q,0],[1,n],[1,0]])))}a=d}w[z]=a}if(v.polygons)v.verbose&&console.log("MarchingSquaresJS-isoContours: returning single polygons for each grid cell"),f=E(f,v);else{v.verbose&&console.log("MarchingSquaresJS-isoContours: returning iso lines (polygon paths) for entire data grid");k=f.rows;t=f.cols;y=[];p=["right","bottom","left","top"];u=[0,-1,0,1];w=[-1,0,1,0];z={bottom:1,left:2,top:3,right:0};d=!0;for(a=0;a<k;a++)if(f.cells[a][0].x0>=f.threshold||f.cells[a][t-1].x1>=f.threshold){d=
!1;break}d&&(f.cells[k-1][0].x3>=f.threshold||f.cells[k-1][t-1].x2>=f.threshold)&&(d=!1);if(d)for(c=0;c<t-1;c++)if(f.cells[0][c].x1>=f.threshold||f.cells[k-1][c].x2>f.threshold){d=!1;break}d&&(v.linearRing?y.push([[0,0],[0,k],[t,k],[t,0],[0,0]]):y.push([[0,0],[0,k],[t,k],[t,0]]));for(a=0;a<k;a++)for(c=0;c<t;c++)if("undefined"!==typeof f.cells[a][c]&&(d=f.cells[a][c],15!==d.cval))for(e=0;4>e;e++)if(l=p[e],"object"===typeof d.edges[l]){m=[];var x=d.edges[l];r=l;h=c;b=a;q=!1;n=[c+x.path[0][0],a+x.path[0][1]];
for(m.push(n);!q;){cc=f.cells[b][h];if("object"!==typeof cc.edges[r])break;x=cc.edges[r];delete cc.edges[r];point=x.path[1];point[0]+=h;point[1]+=b;m.push(point);r=x.move.enter;h+=x.move.x;b+=x.move.y;if("undefined"===typeof f.cells[b]||"undefined"===typeof f.cells[b][h]){if(!v.linearRing)break;x=g=0;h===t?(h--,g=0):0>h?(h++,g=2):b===k?(b--,g=3):0>b&&(b++,g=1);if(h===c&&b===a&&g===z[l])break;for(;;){if(4<x){console.log("Direction change counter overflow! This should never happen!");break}cc=f.cells[b][h];
var C=p[g];if("object"===typeof cc.edges[C]){x=cc.edges[C];m.push(A(h,b,g,x.path));r=C;break}m.push(B(h,b,g));h+=u[g];b+=w[g];if("undefined"===typeof f.cells[b]||"undefined"===typeof f.cells[b][h])h-=u[g],b-=w[g],g=(g+1)%4,x++;if(h===c&&b===a&&g===z[l]){q=!0;r=l;break}}}}!v.linearRing||m[m.length-1][0]===n[0]&&m[m.length-1][1]===n[1]||m.push(n);y.push(m)}f=y}"function"===typeof v.successCallback&&v.successCallback(f);return f}});
